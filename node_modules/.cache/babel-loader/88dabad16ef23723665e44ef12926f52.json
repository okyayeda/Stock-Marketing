{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\masa\\xFCst\\xFC\\\\robinhood\\\\stockmarketing\\\\src\\\\StatsRow.js\";\nimport React from \"react\";\nimport StockChart from \"./stock.svg\";\n\nfunction StatsRow(props) {\n  //   console.log(props, \"what is in props here?\");\n  // (currentPrice - openPrice)/openPrice\n  const percentage = (props.price - props.openPrice) / props.openPrice * 100;\n\n  const getModal = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    onClick: getModal,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__intro\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props === null || props === void 0 ? void 0 : props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.volume && props.volume + \" shares\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__chart\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: StockChart,\n        height: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__numbers\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"row__price\",\n        children: props.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"row__percentage\",\n        children: [\" +\", Number(percentage).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = StatsRow;\nexport default StatsRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatsRow\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/masaüstü/robinhood/stockmarketing/src/StatsRow.js"],"names":["React","StatsRow","props","percentage","price","openPrice","getModal","name","volume","StockChart","Number","toFixed"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACF;AACE,QAAMC,UAAU,GAAI,CAACD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACG,SAArB,IAAgCH,KAAK,CAACG,SAAvC,GAAoD,GAAvE;;AAEA,QAAMC,QAAQ,GAAG,MAAM,CAEtB,CAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAEA,QAA9B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA,kBAAKJ,KAAL,aAAKA,KAAL,uBAAKA,KAAK,CAAEK;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIL,KAAK,CAACM,MAAN,IACDN,KAAK,CAACM,MAAN,GAAe;AADlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEC,UAAV;AAAsB,QAAA,MAAM,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,kBAA2BP,KAAK,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,yBAAkCM,MAAM,CAACP,UAAD,CAAN,CAAmBQ,OAAnB,CAA2B,CAA3B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KAzBQV,Q;AA2BT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport StockChart from './stock.svg'\r\n\r\nfunction StatsRow(props) {\r\n  //   console.log(props, \"what is in props here?\");\r\n// (currentPrice - openPrice)/openPrice\r\n  const percentage = ((props.price - props.openPrice)/props.openPrice) * 100;\r\n\r\n  const getModal = () => {\r\n\r\n  }\r\n  return (\r\n    <div className=\"row\" onClick={getModal}>\r\n      <div className=\"row__intro\">\r\n        <h1>{props?.name}</h1>\r\n        <p>{props.volume && \r\n          (props.volume + \" shares\")\r\n        }</p>\r\n      </div>\r\n      <div className=\"row__chart\">\r\n        <img src={StockChart} height={16}/>\r\n      </div>\r\n      <div className=\"row__numbers\">\r\n        <p className=\"row__price\">{props.price}</p>\r\n        <p className=\"row__percentage\"> +{Number(percentage).toFixed(2)}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatsRow;"]},"metadata":{},"sourceType":"module"}