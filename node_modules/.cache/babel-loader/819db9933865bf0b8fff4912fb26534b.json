{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\robinhood\\\\robinhood\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nconst options = {\n  legend: {\n    display: false\n  },\n  hover: {\n    intersect: false\n  },\n  elements: {\n    line: {\n      tension: 0\n    },\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {}\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      },\n      ticks: {\n        display: false\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        display: false\n      }\n    }]\n  }\n};\n\nfunction LineGraph({\n  casesType\n}) {\n  _s();\n\n  const [data, setData] = useState({});\n  useEffect(() => {\n    let data = [];\n    let value = 50;\n\n    for (var i = 0; i < 366; i++) {\n      let date = new Date();\n      date.setHours(0, 0, 0, 0);\n      date.setDate(i);\n      value += Math.round((Math.random() < 0.5 ? 1 : 0) * Math.random() * 10);\n      data.push({\n        x: date,\n        y: value\n      });\n    }\n\n    setData(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          type: 'line',\n          backgroundColor: \"black\",\n          borderColor: \"#5AC53B\",\n          borderWidth: 2,\n          pointBorderColor: 'rgba(0, 0, 0, 0)',\n          pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n          pointHoverBackgroundColor: '#5AC53B',\n          pointHoverBorderColor: '#000000',\n          pointHoverBorderWidth: 4,\n          pointHoverRadius: 6,\n          data: data\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/robinhood/robinhood/src/LineGraph.js"],"names":["React","useEffect","useState","Line","options","legend","display","hover","intersect","elements","line","tension","point","radius","maintainAspectRatio","tooltips","mode","callbacks","scales","xAxes","type","time","format","tooltipFormat","ticks","yAxes","gridLines","LineGraph","casesType","data","setData","value","i","date","Date","setHours","setDate","Math","round","random","push","x","y","length","datasets","backgroundColor","borderColor","borderWidth","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  hover: {\r\n    intersect: false\r\n  },\r\n  elements: {\r\n    line: {\r\n      tension: 0\r\n    },\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n        ticks: {\r\n          display: false,\r\n        }\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          display: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    \r\n    let data = [];\r\n    let value = 50;\r\n    for(var i = 0; i < 366; i++){\r\n      let date = new Date();\r\n      date.setHours(0,0,0,0);\r\n      date.setDate(i);\r\n      value += Math.round((Math.random() < 0.5 ? 1 : 0) * Math.random() * 10);\r\n      data.push({x: date, y: value});\r\n    }   \r\n    setData(data)\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                type: 'line',\r\n                backgroundColor: \"black\",\r\n                borderColor: \"#5AC53B\",\r\n                borderWidth: 2,\r\n                pointBorderColor: 'rgba(0, 0, 0, 0)',\r\n                pointBackgroundColor: 'rgba(0, 0, 0, 0)',\r\n                pointHoverBackgroundColor: '#5AC53B',\r\n                pointHoverBorderColor: '#000000',\r\n                pointHoverBorderWidth: 4,\r\n                pointHoverRadius: 6,\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}