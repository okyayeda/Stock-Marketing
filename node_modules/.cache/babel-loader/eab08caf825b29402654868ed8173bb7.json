{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\masa\\xFCst\\xFC\\\\robinhood\\\\stockmarketing\\\\src\\\\Stats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Stats.css\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport StatsRow from \"./StatsRow\";\nimport { key } from \"./api\";\nimport axios from \"axios\";\nimport { db } from \"./firebase\";\nconst BASE_URL = \"https://finnhub.io/api/v1/quote?symbol=\";\nconst KEY_URL = `&token=${key}`;\nconst testData = [];\n\nfunction Stats() {\n  _s();\n\n  const [stocksData, setStocksData] = useState([]);\n  const [myStocks, setMyStocks] = useState([]);\n\n  const getMyStocks = () => {\n    db.collection('myStocks').onSnapshot(snapshot => {\n      let promises = [];\n      let tempData = [];\n      snapshot.docs.map(doc => {\n        promises.push(getStocksData(doc.data().ticker).then(res => {\n          tempData.push({\n            id: doc.id,\n            data: doc.data(),\n            info: res.data\n          });\n        }));\n      });\n      Promise.all(promises).then(() => {\n        setMyStocks(tempData);\n      });\n    });\n  };\n\n  const getStocksData = stock => {\n    return axios.get(`${BASE_URL}${stock}${KEY_URL}`).catch(error => {\n      console.error(\"Error\", error.message);\n    });\n  };\n\n  useEffect(() => {\n    const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\n    getMyStocks();\n    let promises = [];\n    stocksList.map(stock => {\n      promises.push(getStocksData(stock).then(res => {\n        testData.push({\n          name: stock,\n          ...res.data\n        });\n      }));\n    });\n    Promise.all(promises).then(() => {\n      console.log(testData);\n      setStocksData(testData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stats\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHorizIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats__content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats__rows\",\n          children: myStocks.map(stock => /*#__PURE__*/_jsxDEV(StatsRow, {\n            name: stock.data.ticker,\n            openPrice: stock.info.o,\n            volume: stock.data.shares,\n            price: stock.info.c\n          }, stock.data.ticker, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats__header stats-lists\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats__content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats__rows\",\n          children: stocksData.map(stock => /*#__PURE__*/_jsxDEV(StatsRow, {\n            name: stock.name,\n            openPrice: stock.o,\n            price: stock.c\n          }, stock.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stats, \"hDk648Ugd9oA8LqLV0tgRdRAG7E=\");\n\n_c = Stats;\nexport default Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/masaüstü/robinhood/stockmarketing/src/Stats.js"],"names":["React","useState","useEffect","MoreHorizIcon","StatsRow","key","axios","db","BASE_URL","KEY_URL","testData","Stats","stocksData","setStocksData","myStocks","setMyStocks","getMyStocks","collection","onSnapshot","snapshot","promises","tempData","docs","map","doc","push","getStocksData","data","ticker","then","res","id","info","Promise","all","stock","get","catch","error","console","message","stocksList","name","log","o","shares","c"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,YAAnB;AAEA,MAAMC,QAAQ,GAAG,yCAAjB;AACA,MAAMC,OAAO,GAAI,UAASJ,GAAI,EAA9B;AAGA,MAAMK,QAAQ,GAAG,EAAjB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMe,WAAW,GAAG,MAAM;AACxBT,IAAAA,EAAE,CACDU,UADD,CACY,UADZ,EAECC,UAFD,CAEYC,QAAQ,IAAI;AACpB,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,QAAQ,GAAG,EAAf;AACAF,MAAAA,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAAS;AACzBJ,QAAAA,QAAQ,CAACK,IAAT,CAAcC,aAAa,CAACF,GAAG,CAACG,IAAJ,GAAWC,MAAZ,CAAb,CACbC,IADa,CACRC,GAAG,IAAI;AACXT,UAAAA,QAAQ,CAACI,IAAT,CAAc;AACZM,YAAAA,EAAE,EAAEP,GAAG,CAACO,EADI;AAEZJ,YAAAA,IAAI,EAAEH,GAAG,CAACG,IAAJ,EAFM;AAGZK,YAAAA,IAAI,EAAEF,GAAG,CAACH;AAHE,WAAd;AAKD,SAPa,CAAd;AAQA,OATF;AAUAM,MAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ,EAAsBS,IAAtB,CAA2B,MAAI;AAC7Bd,QAAAA,WAAW,CAACM,QAAD,CAAX;AACD,OAFD;AAGH,KAlBD;AAmBD,GApBD;;AAsBA,QAAMK,aAAa,GAAIS,KAAD,IAAW;AAC/B,WAAO7B,KAAK,CACT8B,GADI,CACC,GAAE5B,QAAS,GAAE2B,KAAM,GAAE1B,OAAQ,EAD9B,EAEJ4B,KAFI,CAEGC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAK,CAACE,OAA7B;AACD,KAJI,CAAP;AAKD,GAND;;AAQAtC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuC,UAAU,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB,EAA+B,MAA/B,EAAuC,MAAvC,EAA+C,KAA/C,EAAsD,MAAtD,CAAnB;AAEAzB,IAAAA,WAAW;AACX,QAAII,QAAQ,GAAG,EAAf;AACAqB,IAAAA,UAAU,CAAClB,GAAX,CAAgBY,KAAD,IAAW;AACxBf,MAAAA,QAAQ,CAACK,IAAT,CACEC,aAAa,CAACS,KAAD,CAAb,CACCN,IADD,CACOC,GAAD,IAAS;AACbpB,QAAAA,QAAQ,CAACe,IAAT,CAAc;AACZiB,UAAAA,IAAI,EAAEP,KADM;AAEZ,aAAGL,GAAG,CAACH;AAFK,SAAd;AAID,OAND,CADF;AASD,KAVD;AAYAM,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ,EAAsBS,IAAtB,CAA2B,MAAI;AAC7BU,MAAAA,OAAO,CAACI,GAAR,CAAYjC,QAAZ;AACAG,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD,KAHD;AAID,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBACGI,QAAQ,CAACS,GAAT,CAAcY,KAAD,iBACZ,QAAC,QAAD;AAEE,YAAA,IAAI,EAAEA,KAAK,CAACR,IAAN,CAAWC,MAFnB;AAGE,YAAA,SAAS,EAAEO,KAAK,CAACH,IAAN,CAAWY,CAHxB;AAIE,YAAA,MAAM,EAAET,KAAK,CAACR,IAAN,CAAWkB,MAJrB;AAKE,YAAA,KAAK,EAAEV,KAAK,CAACH,IAAN,CAAWc;AALpB,aACOX,KAAK,CAACR,IAAN,CAAWC,MADlB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAkBE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF,eAqBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBACGhB,UAAU,CAACW,GAAX,CAAgBY,KAAD,iBACd,QAAC,QAAD;AAEE,YAAA,IAAI,EAAEA,KAAK,CAACO,IAFd;AAGE,YAAA,SAAS,EAAEP,KAAK,CAACS,CAHnB;AAIE,YAAA,KAAK,EAAET,KAAK,CAACW;AAJf,aACOX,KAAK,CAACO,IADb;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GA/FQ/B,K;;KAAAA,K;AAiGT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Stats.css\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport StatsRow from \"./StatsRow\";\r\nimport { key } from \"./api\";\r\nimport axios from \"axios\";\r\nimport { db } from \"./firebase\";\r\n\r\nconst BASE_URL = \"https://finnhub.io/api/v1/quote?symbol=\";\r\nconst KEY_URL = `&token=${key}`;\r\n\r\n\r\nconst testData = []; \r\n\r\nfunction Stats() {\r\n  const [stocksData, setStocksData] = useState([]);\r\n  const [myStocks, setMyStocks] = useState([]);\r\n\r\n  const getMyStocks = () => {\r\n    db\r\n    .collection('myStocks')\r\n    .onSnapshot(snapshot => {\r\n        let promises = [];\r\n        let tempData = []\r\n        snapshot.docs.map((doc) => {\r\n          promises.push(getStocksData(doc.data().ticker)\r\n          .then(res => {\r\n            tempData.push({\r\n              id: doc.id,\r\n              data: doc.data(),\r\n              info: res.data\r\n            })\r\n          })\r\n        )})\r\n        Promise.all(promises).then(()=>{\r\n          setMyStocks(tempData);\r\n        })\r\n    })\r\n  }\r\n\r\n  const getStocksData = (stock) => {\r\n    return axios\r\n      .get(`${BASE_URL}${stock}${KEY_URL}`)\r\n      .catch((error) => {\r\n        console.error(\"Error\", error.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\r\n\r\n    getMyStocks();\r\n    let promises = [];\r\n    stocksList.map((stock) => {\r\n      promises.push(\r\n        getStocksData(stock)\r\n        .then((res) => {\r\n          testData.push({\r\n            name: stock,\r\n            ...res.data\r\n          });\r\n        })\r\n      )\r\n    });\r\n\r\n    Promise.all(promises).then(()=>{\r\n      console.log(testData);\r\n      setStocksData(testData);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"stats\">\r\n      <div className=\"stats__container\">\r\n        <div className=\"stats__header\">\r\n          <p> Stocks</p>\r\n          <MoreHorizIcon />\r\n        </div>\r\n        <div className=\"stats__content\">\r\n          <div className=\"stats__rows\">\r\n            {myStocks.map((stock) => (\r\n              <StatsRow\r\n                key={stock.data.ticker}\r\n                name={stock.data.ticker}\r\n                openPrice={stock.info.o}\r\n                volume={stock.data.shares}\r\n                price={stock.info.c}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"stats__header stats-lists\">\r\n          <p>Lists</p>\r\n        </div>\r\n        <div className=\"stats__content\">\r\n          <div className=\"stats__rows\">\r\n            {stocksData.map((stock) => (\r\n              <StatsRow\r\n                key={stock.name}\r\n                name={stock.name}\r\n                openPrice={stock.o}\r\n                price={stock.c}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stats;"]},"metadata":{},"sourceType":"module"}